{"name": "Patch an object and verify that changes are applied", "status": "failed", "statusDetails": {"message": "AssertionError: assert 405 == 200\n +  where 405 = <Response [405]>.status_code", "trace": "token = 'rkC1mNuXZ646pOl'\n\n    @allure.title(\"Patch an object and verify that changes are applied\")\n    def test_patch_object(token):\n        # Step 1: Create a full object\n        obj_create = ObjectCreate()\n        obj_create.set_token(token)\n    \n        payload = {\n            \"text\": \"Patch me\",\n            \"url\": \"https://example.com/patch.jpg\",\n            \"tags\": [\"original\"],\n            \"info\": {\"author\": \"Sergo\", \"type\": \"image\"}\n        }\n    \n        with allure.step(\"Create an object\"):\n            response = obj_create.create_object(payload)\n            assert response.status_code == 200\n            object_id = response.json()[\"id\"]\n    \n        # Step 2: Patch the object (only change 'text')\n        obj_patch = ObjectPatch()\n        obj_patch.set_token(token)\n    \n        patch_data = {\n            \"text\": \"I was patched!\"\n        }\n    \n        with allure.step(\"Send PATCH request with partial data\"):\n            patch_response = obj_patch.patch_object(object_id, patch_data)\n>           assert patch_response.status_code == 200\nE           assert 405 == 200\nE            +  where 405 = <Response [405]>.status_code\n\ntests\\test_patch_object.py:36: AssertionError"}, "steps": [{"name": "Create an object", "status": "passed", "steps": [{"name": "Create a new object", "status": "passed", "parameters": [{"name": "payload", "value": "{'text': 'Patch me', 'url': 'https://example.com/patch.jpg', 'tags': ['original'], 'info': {'author': 'Sergo', 'type': 'image'}}"}], "start": 1748318520596, "stop": 1748318521009}], "start": 1748318520596, "stop": 1748318521009}, {"name": "Send PATCH request with partial data", "status": "failed", "statusDetails": {"message": "AssertionError: assert 405 == 200\n +  where 405 = <Response [405]>.status_code\n", "trace": "  File \"C:\\Users\\Sergey\\Projects\\api-automation-framework\\tests\\test_patch_object.py\", line 36, in test_patch_object\n    assert patch_response.status_code == 200\n"}, "start": 1748318521009, "stop": 1748318521300}], "start": 1748318520596, "stop": 1748318521300, "uuid": "38cd5f49-41c3-439f-9d50-52de80965285", "historyId": "39062e707b83829e8c0bac4aa413338f", "testCaseId": "39062e707b83829e8c0bac4aa413338f", "fullName": "tests.test_patch_object#test_patch_object", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_patch_object"}, {"name": "host", "value": "Sergo"}, {"name": "thread", "value": "25544-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_patch_object"}]}