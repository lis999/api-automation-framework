{"name": "Update an object and verify that changes are applied", "status": "failed", "statusDetails": {"message": "AssertionError: assert '536' == 536", "trace": "token = 'K5TCHLAaf2hfQyu'\n\n    @allure.title(\"Update an object and verify that changes are applied\")\n    def test_update_object(token):\n        # Step 1: We create an object\n        obj_create = ObjectCreate()\n        obj_create.set_token(token)\n    \n        payload = {\n            \"text\": \"Original object\",\n            \"url\": \"https://example.com/original.jpg\",\n            \"tags\": [\"original\"],\n            \"info\": {\"author\": \"Sergo\", \"type\": \"image\"}\n        }\n    \n        with allure.step(\"Create an object\"):\n            response = obj_create.create_object(payload)\n            assert response.status_code == 200\n            object_id = response.json()[\"id\"]\n    \n        # Step 2: We update the created object\n        obj_update = ObjectUpdate()\n        obj_update.set_token(token)\n    \n        updated_payload = {\n            \"id\": object_id,\n            \"text\": \"Updated object\",\n            \"url\": \"https://example.com/updated.jpg\",\n            \"tags\": [\"updated\"],\n            \"info\": {\"author\": \"Sergey\", \"type\": \"updated_image\"}\n        }\n    \n        with allure.step(\"Update the object\"):\n            update_response = obj_update.update_object(object_id, updated_payload)\n            assert update_response.status_code == 200\n    \n        # Step 3: We get the updated object\n        obj_get = ObjectGet()\n        obj_get.set_token(token)\n    \n        with allure.step(\"Get the updated object\"):\n            get_response = obj_get.get_object_by_id(object_id)\n            assert get_response.status_code == 200\n            data = get_response.json()\n    \n        # Step 4: We compare the updated object fields with the data we used\n        with allure.step(\"Verify the object fields match updated payload\"):\n>           assert data[\"id\"] == updated_payload[\"id\"]\nE           AssertionError: assert '536' == 536\n\ntests\\test_update_object.py:53: AssertionError"}, "steps": [{"name": "Create an object", "status": "passed", "steps": [{"name": "Create a new object", "status": "passed", "parameters": [{"name": "payload", "value": "{'text': 'Original object', 'url': 'https://example.com/original.jpg', 'tags': ['original'], 'info': {'author': 'Sergo', 'type': 'image'}}"}], "start": 1748307289164, "stop": 1748307289452}], "start": 1748307289164, "stop": 1748307289452}, {"name": "Update the object", "status": "passed", "start": 1748307289452, "stop": 1748307289758}, {"name": "Get the updated object", "status": "passed", "start": 1748307289774, "stop": 1748307290071}, {"name": "Verify the object fields match updated payload", "status": "failed", "statusDetails": {"message": "AssertionError: assert '536' == 536\n", "trace": "  File \"C:\\Users\\Sergey\\Projects\\api-automation-framework\\tests\\test_update_object.py\", line 53, in test_update_object\n    assert data[\"id\"] == updated_payload[\"id\"]\n"}, "start": 1748307290071, "stop": 1748307290071}], "start": 1748307289164, "stop": 1748307290073, "uuid": "4e989dd2-ae0f-400a-9b6f-1bcdf4b5645f", "historyId": "b17b8499881fd58ee19b4ea171768c1e", "testCaseId": "b17b8499881fd58ee19b4ea171768c1e", "fullName": "tests.test_update_object#test_update_object", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_update_object"}, {"name": "host", "value": "Sergo"}, {"name": "thread", "value": "23704-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_update_object"}]}